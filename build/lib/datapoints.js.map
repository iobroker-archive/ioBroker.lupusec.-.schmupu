{
  "version": 3,
  "sources": ["../../src/lib/datapoints.ts"],
  "sourcesContent": ["import { Tools } from './tools';\n\n/**\n * Interface Device Types\n */\nexport interface defDeviceTypes {\n    [index: string]: {\n        name: string;\n        devlist: string;\n        icon?: string;\n    };\n}\n\n/**\n * Interface Device Datapoints\n */\nexport interface defDeviceDatapoints {\n    [index: string]: object;\n}\n\n/**\n * Interface SMS datapoints\n */\nexport interface defSmsDatapoints {\n    [index: string]: any;\n}\n\n/**\n * Interface webcam datapoints\n */\nexport interface defWebcamDatapoints {\n    [index: string]: any;\n}\n\n/**\n * Interface status datapoints\n */\nexport interface defStatusDatapoints {\n    [index: string]: any;\n}\n\n/**\n * Class for datapoints\n */\nexport class Datapoints {\n    /**\n     * Types of Devices\n     */\n    private static getDeviceTypes(): defDeviceTypes {\n        const deviceTypes: defDeviceTypes = {\n            TYPE_0: {\n                name: 'Unknown Device',\n                devlist: 'type_unknown',\n            },\n            TYPE_2: {\n                name: 'Fernbedienung',\n                devlist: 'type_unknown',\n                icon: '/icons/2.png',\n            },\n            TYPE_3: {\n                name: 'Nachtschalter',\n                devlist: 'type_unknown',\n            },\n            TYPE_4: {\n                name: 'T\u00FCrkontakt',\n                devlist: 'type_contact',\n                icon: '/icons/4.png',\n            },\n            TYPE_5: {\n                name: 'Wassersensor',\n                devlist: 'type_sensor_water',\n                icon: '/icons/5.png',\n            },\n            TYPE_6: {\n                name: 'Panic Button',\n                devlist: 'type_unknown',\n            },\n            TYPE_7: {\n                name: 'Panic Button',\n                devlist: 'type_panic_button',\n                icon: '/icons/7.png',\n            },\n            TYPE_9: {\n                name: 'Bewegungsmelder',\n                devlist: 'type_motion',\n                icon: '/icons/9.png',\n            },\n            TYPE_11: {\n                name: 'Rauchmelder / Hitzemelder',\n                devlist: 'type_sensor_fire',\n                icon: '/icons/11.png',\n            },\n            TYPE_12: {\n                name: 'Gasmelder',\n                devlist: 'type_unknown',\n            },\n            TYPE_13: {\n                name: 'CO-Melder',\n                devlist: 'type_sensor_co',\n                icon: '/icons/13.png',\n            },\n            TYPE_14: {\n                name: 'Hitzemelder',\n                devlist: 'type_unknown',\n            },\n            TYPE_16: {\n                name: 'Tag Reader',\n                devlist: 'type_unknown',\n            },\n            TYPE_17: {\n                name: 'Keypad Outdoor',\n                devlist: 'type_kpad_outdoor',\n                icon: '/icons/17.png',\n            },\n            TYPE_19: {\n                name: 'Glasbruchsensor',\n                devlist: 'type_sensor_glas',\n                icon: '/icons/19.png',\n            },\n            TYPE_20: {\n                name: 'Temperatursensor',\n                devlist: 'type_raumsensor20',\n                icon: '/icons/20.png',\n            },\n            TYPE_21: {\n                name: 'Med. Alarmmelder',\n                devlist: 'type_unknown',\n            },\n            TYPE_22: {\n                name: 'Mini Innensirene / Statusanzeige',\n                devlist: 'type_statusanzeige',\n                icon: '/icons/22.png',\n            },\n            TYPE_23: {\n                name: 'Sirene',\n                devlist: 'type_siren',\n                icon: '/icons/23.png',\n            },\n            TYPE_24: {\n                name: 'Power Switch',\n                devlist: 'type_pswitch',\n                icon: '/icons/24.png',\n            },\n            TYPE_26: {\n                name: 'Repeater',\n                devlist: 'type_repeater',\n                icon: '/icons/26.png',\n            },\n            TYPE_27: {\n                name: 'PIR Kamera',\n                devlist: 'type_unknown',\n            },\n            TYPE_31: {\n                name: 'Fernbedienung',\n                devlist: 'type_unknown',\n                icon: '/icons/2.png',\n            },\n            TYPE_33: {\n                name: 'Drahtloser Sensoreingang',\n                devlist: 'type_unknown',\n            },\n            TYPE_37: {\n                name: 'Keypad',\n                devlist: 'type_kpad',\n                icon: '/icons/37.png',\n            },\n            TYPE_39: {\n                name: 'Glasbruchmelder',\n                devlist: 'type_sensor_glas',\n                icon: '/icons/39.png',\n            },\n            TYPE_45: {\n                name: 'Innensirene',\n                devlist: 'type_statusanzeige',\n                icon: '/icons/45.png',\n            },\n            TYPE_46: {\n                name: 'Au\u00DFensirene',\n                devlist: 'type_siren',\n                icon: '/icons/46.png',\n            },\n            TYPE_48: {\n                name: 'Power Switch Meter',\n                devlist: 'type_switch',\n                icon: '/icons/48.png',\n            },\n            TYPE_50: {\n                name: 'Electric Meter',\n                devlist: 'type_electric_meter',\n                icon: '/icons/50.png',\n            },\n            TYPE_52: {\n                name: 'Universal IR Fernbedienung',\n                devlist: 'type_ir_remotecontrol',\n                icon: '/icons/52.png',\n            },\n            TYPE_54: {\n                name: 'Raumsensor',\n                devlist: 'type_raumsensor54',\n                icon: '/icons/54.png',\n            },\n            TYPE_57: {\n                name: 'Nuki',\n                devlist: 'type_nuki',\n                icon: '/icons/57.png',\n            },\n            TYPE_58: {\n                name: 'Hitzemelder',\n                devlist: 'type_heatdetector',\n                icon: '/icons/58.png',\n            },\n            TYPE_61: {\n                name: 'Remote Switch',\n                devlist: 'type_unknown',\n            },\n            TYPE_66: {\n                name: 'Dimmer',\n                devlist: 'type_dimmer',\n                icon: '/icons/66.png',\n            },\n            TYPE_67: {\n                name: 'Rauchmelder',\n                devlist: 'type_unknown',\n            },\n            TYPE_73: {\n                name: 'Heizungsthermostat',\n                devlist: 'type_unknown',\n            },\n            TYPE_74: {\n                name: 'Hue',\n                devlist: 'type_hue',\n                icon: '/icons/74.png',\n            },\n            TYPE_75: {\n                name: 'Temperatursensor',\n                devlist: 'type_unknown',\n            },\n            TYPE_76: {\n                name: 'Rollladenrelais',\n                devlist: 'type_shutter',\n                icon: '/icons/76.png',\n            },\n            TYPE_78: {\n                name: 'Lichtsensor',\n                devlist: 'type_lightsensor',\n                icon: '/icons/78.png',\n            },\n            TYPE_79: {\n                name: 'Heizk\u00F6rperthermostat',\n                devlist: 'type_thermostat',\n                icon: '/icons/79.png',\n            },\n            TYPE_81: {\n                name: 'Smart Switch',\n                devlist: 'type_smart_switch',\n                icon: '/icons/81.png',\n            },\n            TYPE_93: {\n                name: 'Ersch\u00FCtterungssensor',\n                devlist: 'type_shock_sensor',\n                icon: '/icons/93.png',\n            },\n        };\n        return deviceTypes;\n    }\n\n    private static getDeviceDatapoints(): defDeviceDatapoints {\n        const noanswer_event_en = { 0: 'no answer' };\n        const doorbellevent_en = { 3: 'doorbell' };\n        const alarm_events_en = {\n            5: 'burglar alarm',\n            6: 'smoke',\n            7: 'medical alarm',\n            8: 'water',\n            9: 'silence alarm',\n            10: 'panic alarm',\n            11: 'ermergency alarm',\n            15: 'emergency alarm(silence)',\n            12: 'fire',\n            13: 'CO alarm',\n            18: 'Gas alarm',\n            19: 'Heat alarm',\n        };\n        const sensor_events_en = {\n            100: 'Sensor-Event 1',\n            101: 'Sensor-Event 2',\n            102: 'Sensor-Event 3',\n            103: 'Sensor-Event 4',\n            104: 'Sensor-Event 5',\n            105: 'Sensor-Event 6',\n            106: 'Sensor-Event 7',\n            107: 'Sensor-Event 8',\n            108: 'Sensor-Event 9',\n            109: 'Sensor-Event 10',\n            110: 'Sensor-Event 11',\n            111: 'Sensor-Event 12',\n            112: 'Sensor-Event 13',\n            113: 'Sensor-Event 14',\n            114: 'Sensor-Event 15',\n            115: 'Sensor-Event 16',\n        };\n        const szene_events_en = {\n            150: 'Szene 1',\n            151: 'Szene 2',\n            152: 'Szene 3',\n            153: 'Szene 4',\n            154: 'Szene 5',\n            155: 'Szene 6',\n            156: 'Szene 7',\n            157: 'Szene 8',\n            158: 'Szene 9',\n            159: 'Szene 10',\n            160: 'Szene 11',\n            161: 'Szene 12',\n            162: 'Szene 13',\n            163: 'Szene 14',\n            164: 'Szene 15',\n            165: 'Szene 16',\n        };\n        const button_events_en = { ...noanswer_event_en, ...alarm_events_en, ...sensor_events_en, ...szene_events_en };\n\n        const noanswer_event_de = { 0: 'Keine Antwort' };\n        const doorbellevent_de = { 3: 'T\u00FCrklingel' };\n        const alarm_events_de = {\n            5: 'Einbruchalarm',\n            6: 'Rauch',\n            7: 'Medizinischer Alarm',\n            8: 'Wasser',\n            9: 'Stiller Alarm',\n            10: 'Panic Alarm',\n            11: 'Notfall Alarm',\n            15: 'Notfall Alarm (Still)',\n            12: 'Feuer',\n            13: 'CO Alarm',\n            18: 'Gas Alarm',\n            19: 'Hitze Alarm',\n        };\n        const sensor_events_de = {\n            100: 'Sensor-Event anwenden 1',\n            101: 'Sensor-Event anwenden 2',\n            102: 'Sensor-Event anwenden 3',\n            103: 'Sensor-Event anwenden 4',\n            104: 'Sensor-Event anwenden 5',\n            105: 'Sensor-Event anwenden 6',\n            106: 'Sensor-Event anwenden 7',\n            107: 'Sensor-Event anwenden 8',\n            108: 'Sensor-Event anwenden 9',\n            109: 'Sensor-Event anwenden 10',\n            110: 'Sensor-Event anwenden 11',\n            111: 'Sensor-Event anwenden 12',\n            112: 'Sensor-Event anwenden 13',\n            113: 'Sensor-Event anwenden 14',\n            114: 'Sensor-Event anwenden 15',\n            115: 'Sensor-Event anwenden 16',\n        };\n        const szene_events_de = {\n            150: 'Szene anwenden 1',\n            151: 'Szene anwenden 2',\n            152: 'Szene anwenden 3',\n            153: 'Szene anwenden 4',\n            154: 'Szene anwenden 5',\n            155: 'Szene anwenden 6',\n            156: 'Szene anwenden 7',\n            157: 'Szene anwenden 8',\n            158: 'Szene anwenden 9',\n            159: 'Szene anwenden 10',\n            160: 'Szene anwenden 11',\n            161: 'Szene anwenden 12',\n            162: 'Szene anwenden 13',\n            163: 'Szene anwenden 14',\n            164: 'Szene anwenden 15',\n            165: 'Szene anwenden 16',\n        };\n        const button_events_de = { ...noanswer_event_de, ...alarm_events_de, ...sensor_events_de, ...szene_events_de };\n\n        /**\n         * List of devices\n         */\n        const deviceDatapoints: defDeviceDatapoints = {\n            // Sirene\n            type_siren: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n            },\n            // Steckdose\n            type_switch: {\n                status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'switch.power',\n                        name: {\n                            de: 'Schalter',\n                            en: 'Switch',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { false: 'off', true: 'on' },\n                            de: { false: 'Aus', true: 'An' },\n                        },\n                    },\n                },\n                /*\n            status: {\n              type: 'string',\n              role: 'text',\n              read: true,\n              write: false,\n            },\n            */\n                pd: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level',\n                        name: {\n                            en: 'Minutes to get off again',\n                            de: 'Aus in x Minuten',\n                        },\n                        read: true,\n                        write: true,\n                        min: 0,\n                        max: 180,\n                        def: 0,\n                    },\n                },\n                power: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.power.consumption',\n                        name: {\n                            en: 'Power',\n                            de: 'Verbrauch',\n                        },\n                        read: true,\n                        write: false,\n                        unit: 'W',\n                    },\n                },\n                powertotal: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.power.consumption',\n                        name: {\n                            en: 'Power Total',\n                            de: 'Gesamtverbrauch',\n                        },\n                        read: true,\n                        write: false,\n                        unit: 'kWh',\n                    },\n                },\n                always_off: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Switch/Push button',\n                            de: 'Schalter/Taster',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { 0: 'Switch', 1: 'Push button' },\n                            de: { 0: 'Schalter', 1: 'Taster' },\n                        },\n                    },\n                },\n            },\n            type_nuki: {\n                nuki_state: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            de: 'T\u00FCr Status',\n                            en: 'Door state',\n                        },\n                        read: true,\n                        write: false,\n                        states: {\n                            en: { 0: 'opend', 1: 'locked', 3: 'unlocked' },\n                            de: { 0: 'T\u00FCr offen', 1: 'Abgeschlossen', 3: 'Aufgeschlossen' },\n                        },\n                    },\n                },\n                nuki_action: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            de: 'T\u00FCr Aktion',\n                            en: 'Door action',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { 0: 'open', 1: 'lock', 3: 'unlock', 4: 'unknown' },\n                            de: { 0: 'T\u00FCr \u00F6ffnen', 1: 'abschlie\u00DFen', 3: 'aufschlie\u00DFen', 4: 'nicht bekannt' },\n                        },\n                        def: 4,\n                    },\n                },\n                status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n            },\n            // Electric Meter / Hauptstromz\u00E4hler\n            type_electric_meter: {\n                factor: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            de: 'Impulsfaktor pro 1 kWh',\n                            en: 'Impulsfactor for 1 kWh',\n                        },\n                        read: true,\n                        write: true,\n                    },\n                },\n                power: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.power.consumption',\n                        name: {\n                            en: 'Power',\n                            de: 'Verbrauch',\n                        },\n                        read: true,\n                        write: false,\n                        unit: 'W',\n                    },\n                },\n                powertotal: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.power.consumption',\n                        name: {\n                            en: 'Power Total',\n                            de: 'Gesamtverbrauch',\n                        },\n                        read: true,\n                        write: false,\n                        unit: 'kWh',\n                    },\n                },\n            },\n            // Lichtschalter (Bsp. 24)\n            type_pswitch: {\n                status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'switch.power',\n                        name: {\n                            de: 'Schalter',\n                            en: 'Switch',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { false: 'off', true: 'on' },\n                            de: { false: 'Aus', true: 'An' },\n                        },\n                    },\n                },\n                pd: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level',\n                        name: {\n                            en: 'Minutes to get off again',\n                            de: 'Aus in x Minuten',\n                        },\n                        read: true,\n                        write: true,\n                        min: 0,\n                        max: 180,\n                        def: 0,\n                    },\n                },\n                always_off: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Switch/Push button',\n                            de: 'Schalter/Taster',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { 0: 'Switch', 1: 'Push button' },\n                            de: { 0: 'Schalter', 1: 'Taster' },\n                        },\n                    },\n                },\n            },\n            // Dimmer , Unterputzrelais\n            type_dimmer: {\n                status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'switch.power',\n                        name: {\n                            de: 'Schalter',\n                            en: 'Switch',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { false: 'off', true: 'on' },\n                            de: { false: 'Aus', true: 'An' },\n                        },\n                    },\n                },\n                level: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level.dimmer',\n                        name: {\n                            en: 'Brightness',\n                            de: 'Helligkeit',\n                        },\n                        read: true,\n                        write: true,\n                        min: -1,\n                        max: 100,\n                        step: 1,\n                        unit: '%',\n                    },\n                },\n                always_off: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Switch/Push button',\n                            de: 'Schalter/Taster',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { 0: 'Switch', 1: 'Push button' },\n                            de: { 0: 'Schalter', 1: 'Taster' },\n                        },\n                    },\n                },\n                pd: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level',\n                        name: {\n                            en: 'Minutes to get off again',\n                            de: 'Aus in x Minuten',\n                        },\n                        read: true,\n                        write: true,\n                        min: 0,\n                        max: 180,\n                        def: 0,\n                    },\n                },\n            },\n            // Hue Lampe\n            type_hue: {\n                status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'switch.power',\n                        name: {\n                            de: 'Schalter',\n                            en: 'Switch',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { false: 'off', true: 'on' },\n                            de: { false: 'Aus', true: 'An' },\n                        },\n                    },\n                },\n                /*\n            mod: {\n                 type: 'state',\n            common: {\n              type: 'number',\n              role: 'level',\n              name: 'Modus',\n              read: true,\n              write: true,\n              def: 2\n            }\n            },\n            */\n                hue: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level.color.hue',\n                        name: 'Hue',\n                        read: true,\n                        write: true,\n                        min: 0,\n                        max: 65535,\n                    },\n                },\n                sat: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level.color.saturation',\n                        name: 'Saturation',\n                        read: true,\n                        write: true,\n                        min: 0,\n                        max: 360,\n                    },\n                },\n                level: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level.dimmer',\n                        name: {\n                            en: 'Brightness',\n                            de: 'Helligkeit',\n                        },\n                        read: true,\n                        write: true,\n                        min: -1,\n                        max: 100,\n                        step: 1,\n                        unit: '%',\n                    },\n                },\n            },\n            // T\u00FCrkontakt\n            type_contact: {\n                status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.door',\n                        name: 'Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push notification',\n                        read: true,\n                        write: true,\n                    },\n                },\n                schar_latch_rpt: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Send SIA/Contact-ID Msg.',\n                            de: 'SIA/Contact-ID Nachricht',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { false: 'off', true: 'on' },\n                            de: { false: 'Aus', true: 'An' },\n                        },\n                        min: 0,\n                        max: 1,\n                    },\n                },\n            },\n            // Type shock sensor\n            type_shock_sensor: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push notification',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Bewegungsmelder\n            type_motion: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm.secure',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm.secure',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push notification',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Glasbruch\n            type_sensor_glas: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push Nachricht',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Rauchmelder\n            type_sensor_fire: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm.fire',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm.fire',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push notification',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Hitzemelder\n            type_heatdetector: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm.fire',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm.fire',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push Nachricht',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Wassermelder\n            type_sensor_water: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm.flood',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm.flood',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push Nachricht',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Panic button\n            type_panic_button: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                sresp_emergency: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Emergency Button',\n                            de: 'Notfall Knopf',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...doorbellevent_en, ...alarm_events_en, ...sensor_events_en, ...szene_events_en },\n                            de: { ...doorbellevent_de, ...alarm_events_de, ...sensor_events_de, ...szene_events_de },\n                        },\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push notification',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Roll\u00E4den\n            type_shutter: {\n                level: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level',\n                        name: {\n                            en: 'Shutter',\n                            de: 'Rollladenh\u00F6he',\n                        },\n                        read: true,\n                        write: true,\n                        min: -1,\n                        max: 100,\n                        step: 1,\n                        unit: '%',\n                    },\n                },\n                switch: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'switch',\n                        name: {\n                            en: 'Shutter down/up',\n                            de: 'Rollladen hoch/runter',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { 0: 'up', 1: 'down', 2: 'stop' },\n                            de: { 0: 'hoch', 1: 'runter', 2: 'stop' },\n                        },\n                        min: 0,\n                        max: 2,\n                    },\n                },\n                on_time: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level.timer',\n                        name: {\n                            en: 'Time to get up',\n                            de: 'Zeitraum um ganz hochzufahren',\n                        },\n                        read: true,\n                        write: true,\n                        min: -1,\n                        max: 240,\n                        step: 0.1,\n                        def: 0,\n                        unit: 'sec',\n                    },\n                },\n                off_time: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level.timer',\n                        name: {\n                            en: 'Time to get down',\n                            de: 'Zeitraum um ganz runterzufahren',\n                        },\n                        read: true,\n                        write: true,\n                        min: -1,\n                        max: 240,\n                        step: 0.1,\n                        def: 0,\n                        unit: 'sec',\n                    },\n                },\n            },\n            // Raumsensor / Thermostat Type 20\n            type_raumsensor20: {\n                actual_temperature: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.temperature',\n                        name: {\n                            en: 'Actual temperature',\n                            de: 'Aktuelle Temperatur',\n                        },\n                        read: true,\n                        write: false,\n                        min: -100,\n                        max: 100,\n                        unit: '\u00B0C',\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push Nachricht',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Raumsensor / Thermostat Type 54\n            type_raumsensor54: {\n                actual_temperature: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.temperature',\n                        name: {\n                            en: 'Actual temperature',\n                            de: 'Aktuelle Temperatur',\n                        },\n                        read: true,\n                        write: false,\n                        min: -100,\n                        max: 100,\n                        unit: '\u00B0C',\n                    },\n                },\n                actual_humidity: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.humidity',\n                        name: {\n                            en: 'Humidity',\n                            de: 'Luftfeuchtigkeit',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 100,\n                        unit: '%',\n                    },\n                },\n                actual_wind_angle: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Wind angle',\n                            de: 'Windrichtung',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 360,\n                        unit: '\u00B0',\n                    },\n                },\n                actual_wind_strength: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.speed',\n                        name: {\n                            en: 'Wind strength',\n                            de: 'Windgeschwindigkeit',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 1000,\n                        unit: 'km/h',\n                    },\n                },\n                actual_gust_strength: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.speed',\n                        name: {\n                            en: 'Wind gust',\n                            de: 'Windb\u00F6hen',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 1000,\n                        unit: 'km/h',\n                    },\n                },\n                actual_air_pressure: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.pressure',\n                        name: {\n                            en: 'Air pressure',\n                            de: 'Luftdruck',\n                        },\n                        read: true,\n                        write: false,\n                        min: -2000,\n                        max: 2000,\n                        unit: 'mbar',\n                    },\n                },\n                actual_noise: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Noise',\n                            de: 'Lautst\u00E4rke',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 1000,\n                        unit: 'db',\n                    },\n                },\n                actual_co2: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.co2',\n                        name: {\n                            en: 'CO2 content',\n                            de: 'CO2 Gehalt',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 10000,\n                        unit: 'ppm',\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push Nachricht',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Lichtsensor\n            type_lightsensor: {\n                actual_lux: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.brightness',\n                        name: {\n                            en: 'Lux level',\n                            de: 'Lux Helligkeitsniveau',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 20,\n                    },\n                },\n                actual_temperature: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.temperature',\n                        name: {\n                            en: 'Actual temperature',\n                            de: 'Aktuelle Temperatur',\n                        },\n                        read: true,\n                        write: false,\n                        min: -100,\n                        max: 100,\n                        unit: '\u00B0C',\n                    },\n                },\n                actual_humidity: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.humidity',\n                        name: {\n                            en: 'Humidity',\n                            de: 'Luftfeuchtigkeit',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 100,\n                        unit: '%',\n                    },\n                },\n                send_notify: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Push Nachricht',\n                        read: true,\n                        write: true,\n                    },\n                },\n            },\n            // Thermostat\n            type_thermostat: {\n                set_temperature: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level.temperature',\n                        name: {\n                            en: 'Set temperature',\n                            de: 'Soll Temperatur',\n                        },\n                        read: true,\n                        write: true,\n                        min: -30,\n                        max: 30,\n                        step: 0.5,\n                        unit: '\u00B0C',\n                    },\n                },\n                thermo_offset: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'level.temperature',\n                        name: {\n                            en: 'Offset temperature',\n                            de: 'Abweichende Temperatur',\n                        },\n                        read: true,\n                        write: true,\n                        min: -2.5,\n                        max: 2.5,\n                        step: 0.5,\n                        unit: '\u00B0C',\n                    },\n                },\n                actual_temperature: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.temperature',\n                        name: {\n                            en: 'Actual temperatur',\n                            de: 'Aktuelle Temperatur',\n                        },\n                        read: true,\n                        write: false,\n                        min: -100,\n                        max: 100,\n                        unit: '\u00B0C',\n                    },\n                },\n                mode: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'switch',\n                        name: {\n                            en: 'Control',\n                            de: 'Zeitsteuerung',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { 0: 'manuell', 1: 'automatic' },\n                            de: { 0: 'Manuell', 1: 'Automatisch' },\n                        },\n                        min: 0,\n                        max: 1,\n                    },\n                },\n                valve: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value.valve',\n                        name: {\n                            en: 'Valve',\n                            de: 'Ventil\u00F6ffnung',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 100,\n                        unit: '%',\n                    },\n                },\n                off: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'switch',\n                        name: {\n                            en: 'Off/On',\n                            de: 'Aus/An',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { false: 'off', true: 'on' },\n                            de: { false: 'Aus', true: 'An' },\n                        },\n                    },\n                },\n            },\n            // Nichts gefunden\n            type_unknown: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: 'Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n            },\n            // Innensirene / Statusanzeige\n            type_statusanzeige: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n            },\n            // Repeater\n            type_repeater: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n            },\n            // CO sensor\n            type_sensor_co: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n            },\n            // Smart Switch\n            type_smart_switch: {\n                alarm_status_ex: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                alarm_status: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'sensor.alarm',\n                        name: 'Alarm Status',\n                        read: true,\n                        write: false,\n                    },\n                },\n                sresp_button_1: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Button 1',\n                            de: 'Taster 1',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...button_events_en },\n                            de: { ...button_events_de },\n                        },\n                    },\n                },\n                sresp_button_2: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Button 2',\n                            de: 'Taster 2',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...button_events_en },\n                            de: { ...button_events_de },\n                        },\n                    },\n                },\n                sresp_button_3: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Button 3',\n                            de: 'Taster 3',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...button_events_en },\n                            de: { ...button_events_de },\n                        },\n                    },\n                },\n                sresp_button_4: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Button 4',\n                            de: 'Taster 4',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...button_events_en },\n                            de: { ...button_events_de },\n                        },\n                    },\n                },\n            },\n            // Universal IR Fernbedienung\n            type_ir_remotecontrol: {\n                appliance_1: {\n                    type: 'channel',\n                    common: {\n                        name: '%value%',\n                    },\n                },\n                appliance_2: {\n                    type: 'channel',\n                    common: {\n                        name: '%value%',\n                    },\n                },\n                appliance_3: {\n                    type: 'channel',\n                    common: {\n                        name: '%value%',\n                    },\n                },\n                appliance_4: {\n                    type: 'channel',\n                    common: {\n                        name: '%value%',\n                    },\n                },\n                appliance_5: {\n                    type: 'channel',\n                    common: {\n                        name: '%value%',\n                    },\n                },\n                leds: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: {\n                            en: 'LEDs',\n                            de: 'LEDs',\n                        },\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_1.mode_name_17': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_1.mode_name_18': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_1.mode_name_19': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_1.mode_name_20': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_1.mode_name_21': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_1.mode_name_22': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_1.mode_name_23': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_1.mode_name_24': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_2.mode_name_33': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_2.mode_name_34': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_2.mode_name_35': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_2.mode_name_36': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_2.mode_name_37': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_2.mode_name_38': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_2.mode_name_39': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_2.mode_name_40': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_3.mode_name_49': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_3.mode_name_50': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_3.mode_name_51': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_3.mode_name_52': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_3.mode_name_53': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_3.mode_name_54': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_3.mode_name_55': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_3.mode_name_56': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_4.mode_name_65': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_4.mode_name_66': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_4.mode_name_67': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_4.mode_name_68': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_4.mode_name_69': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_4.mode_name_70': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_4.mode_name_71': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_4.mode_name_72': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_5.mode_name_81': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_5.mode_name_82': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_5.mode_name_83': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_5.mode_name_84': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_5.mode_name_85': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_5.mode_name_86': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_5.mode_name_87': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n                'appliance_5.mode_name_88': {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'button',\n                        name: '%value%',\n                        read: true,\n                        write: true,\n                        def: false,\n                    },\n                },\n            },\n            type_kpad: {\n                sresp_button_123: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Buttons 1-3',\n                            de: 'Tastern 1-3',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...doorbellevent_en, ...alarm_events_en, ...sensor_events_en, ...szene_events_en },\n                            de: { ...doorbellevent_de, ...alarm_events_de, ...sensor_events_de, ...szene_events_de },\n                        },\n                    },\n                },\n                sresp_button_456: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Buttons 4-6',\n                            de: 'Tastern 4-6',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...alarm_events_en, ...sensor_events_en, ...szene_events_en },\n                            de: { ...alarm_events_de, ...sensor_events_de, ...szene_events_de },\n                        },\n                    },\n                },\n                sresp_button_789: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Buttons 7-9',\n                            de: 'Tastern 7-9',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...alarm_events_en, ...sensor_events_en, ...szene_events_en },\n                            de: { ...alarm_events_de, ...sensor_events_de, ...szene_events_de },\n                        },\n                    },\n                },\n            },\n            type_kpad_outdoor: {\n                sresp_button_123: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Buttons 1-3',\n                            de: 'Tastern 1-3',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...doorbellevent_en, ...alarm_events_en, ...sensor_events_en, ...szene_events_en },\n                            de: { ...doorbellevent_de, ...alarm_events_de, ...sensor_events_de, ...szene_events_de },\n                        },\n                    },\n                },\n                sresp_button_456: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Buttons 4-6',\n                            de: 'Tastern 4-6',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...alarm_events_en, ...sensor_events_en, ...szene_events_en },\n                            de: { ...alarm_events_de, ...sensor_events_de, ...szene_events_de },\n                        },\n                    },\n                },\n                sresp_button_789: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Buttons 7-9',\n                            de: 'Tastern 7-9',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...alarm_events_en, ...sensor_events_en, ...szene_events_en },\n                            de: { ...alarm_events_de, ...sensor_events_de, ...szene_events_de },\n                        },\n                    },\n                },\n                sresp_button_1: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Button 1',\n                            de: 'Taster 1',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...button_events_en },\n                            de: { ...button_events_de },\n                        },\n                    },\n                },\n                sresp_button_2: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Button 2',\n                            de: 'Taster 2',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...button_events_en },\n                            de: { ...button_events_de },\n                        },\n                    },\n                },\n                sresp_button_3: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Button 3',\n                            de: 'Taster 3',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...button_events_en },\n                            de: { ...button_events_de },\n                        },\n                    },\n                },\n                sresp_button_4: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Button 4',\n                            de: 'Taster 4',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { ...button_events_en },\n                            de: { ...button_events_de },\n                        },\n                    },\n                },\n            },\n            // Gilt f\u00FCr alle Ger\u00E4te.\n            type_all: {\n                // SID l\u00F6schen !!!\n                /*\n            sid: {\n              type: 'string',\n              role: 'text',\n              name: 'ID des Ger\u00E4tes',\n              read: true,\n              write: false\n            },\n            */\n                name: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: {\n                            en: 'Name of device',\n                            de: 'Ger\u00E4tename',\n                        },\n                        read: true,\n                        write: true,\n                    },\n                },\n                area: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: 'Area',\n                        read: true,\n                        write: false,\n                        states: { 1: 'Area 1', 2: 'Area 2' },\n                        min: 1,\n                        max: 2,\n                    },\n                },\n                zone: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: 'Zone',\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 500,\n                    },\n                },\n                tamper_ok: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Sabotage',\n                            de: 'Sabotage',\n                        },\n                        read: true,\n                        write: false,\n                        states: {\n                            en: { 0: 'Error', 1: 'Okay' },\n                            de: { 0: 'Fehler', 1: 'Okay' },\n                        },\n                        min: 0,\n                        max: 1,\n                    },\n                },\n                cond_ok: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Condition',\n                            de: 'Zustand',\n                        },\n                        read: true,\n                        write: false,\n                        states: {\n                            en: { 0: 'Error', 1: 'Okay' },\n                            de: { 0: 'Fehler', 1: 'Okay' },\n                        },\n                        min: 0,\n                        max: 1,\n                    },\n                },\n                battery_ok: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Battery',\n                            de: 'Batterie',\n                        },\n                        read: true,\n                        write: false,\n                        states: {\n                            en: { 0: 'Low', 1: 'Okay' },\n                            de: { 0: 'Leer', 1: 'Okay' },\n                        },\n                        min: 0,\n                        max: 1,\n                    },\n                },\n                /*\n            type_f: {\n                            type: 'state',\n                common: {\n              type: 'string',\n              role: 'value',\n              name: 'Sensortyp',\n              read: true,\n              write: false}\n            },\n            */\n                rssi: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Rssi',\n                            de: 'Rssi',\n                        },\n                        read: true,\n                        write: false,\n                        min: 0,\n                        max: 9,\n                    },\n                },\n                reachable: {\n                    type: 'state',\n                    common: {\n                        type: 'boolean',\n                        role: 'value',\n                        name: {\n                            en: 'Device reachable',\n                            de: 'Ger\u00E4t erreichbar',\n                        },\n                        states: {\n                            en: { false: 'no', 1: 'yes' },\n                            de: { false: 'nein', 1: 'ja' },\n                        },\n                        read: true,\n                        write: false,\n                    },\n                },\n                type: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Devicetype number',\n                            de: 'Nummer Ger\u00E4tetyp',\n                        },\n                        read: true,\n                        write: false,\n                    },\n                },\n                type_name: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'text',\n                        name: {\n                            en: 'Devicetype',\n                            de: 'Ger\u00E4tetyp',\n                        },\n                        read: true,\n                        write: false,\n                    },\n                },\n                bypass: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Device deactivated',\n                            de: 'Ger\u00E4t deaktiviert',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { 0: 'off', 1: 'on' },\n                            de: { 0: 'Aus', 1: 'An' },\n                        },\n                        min: 0,\n                        max: 1,\n                    },\n                },\n                bypass_tamper: {\n                    type: 'state',\n                    common: {\n                        type: 'number',\n                        role: 'value',\n                        name: {\n                            en: 'Tamper deactivated',\n                            de: 'Sabotage deaktivieren',\n                        },\n                        read: true,\n                        write: true,\n                        states: {\n                            en: { 0: 'off', 1: 'on' },\n                            de: { 0: 'Aus', 1: 'An' },\n                        },\n                        min: 0,\n                        max: 1,\n                    },\n                },\n                logmsg: {\n                    type: 'state',\n                    common: {\n                        type: 'string',\n                        role: 'value',\n                        name: {\n                            en: 'Logfile',\n                            de: 'Logfile',\n                        },\n                        read: true,\n                        write: false,\n                        def: '',\n                    },\n                },\n            },\n        };\n        return deviceDatapoints;\n    }\n\n    private static getStatusDatapoints(): defStatusDatapoints {\n        /**\n         * Status\n         */\n        const statusDatapoints: defStatusDatapoints = {\n            mode_pc_a1: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'level',\n                    name: {\n                        de: 'Modus Area 1',\n                        en: 'Modus Area 1',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: true,\n                    states: {\n                        en: { 0: 'Disarm', 1: 'Arm', 2: 'Home1', 3: 'Home2', 4: 'Home3' },\n                        de: { 0: 'Disarm', 1: 'Arm', 2: 'Home1', 3: 'Home2', 4: 'Home3' },\n                    },\n                    min: 0,\n                    max: 4,\n                },\n            },\n            apple_home_a1: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'level',\n                    name: {\n                        en: 'Apple Home 1',\n                        de: 'Apple Home 1',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: true,\n                    states: {\n                        en: { 0: 'stay arm', 1: 'away arm', 2: 'night arm', 3: 'disarm', 4: 'alarm triggered' },\n                        de: { 0: 'stay arm', 1: 'away arm', 2: 'night arm', 3: 'disarm', 4: 'alarm triggered' },\n                    },\n                    min: 0,\n                    max: 4,\n                },\n            },\n            mode_pc_a2: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'level',\n                    name: {\n                        de: 'Modus Area 2',\n                        en: 'Modus Area 2',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: true,\n                    states: {\n                        en: { 0: 'Disarm', 1: 'Arm', 2: 'Home1', 3: 'Home2', 4: 'Home3' },\n                        de: { 0: 'Disarm', 1: 'Arm', 2: 'Home1', 3: 'Home2', 4: 'Home3' },\n                    },\n                    min: 0,\n                    max: 4,\n                },\n            },\n            apple_home_a2: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'level',\n                    name: {\n                        en: 'Apple Home 2',\n                        de: 'Apple Home 2',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: true,\n                    states: {\n                        en: { 0: 'stay arm', 1: 'away arm', 2: 'night arm', 3: 'disarm', 4: 'alarm triggered' },\n                        de: { 0: 'stay arm', 1: 'away arm', 2: 'night arm', 3: 'disarm', 4: 'alarm triggered' },\n                    },\n                    min: 0,\n                    max: 4,\n                },\n            },\n            alarm_ex: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'sensor.alarm',\n                    name: {\n                        en: 'Alarm Status',\n                        de: 'Alarm Status',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: false,\n                    states: {\n                        en: { 0: 'no Alarm', 1: 'Alarm in Area 1', 2: 'Alarm in Area 2' },\n                        de: { 0: 'kein Alarm', 1: 'Alarm in Area 1', 2: 'Alarm in Area 2' },\n                    },\n                    min: 0,\n                    max: 2,\n                },\n            },\n            dc_ex: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'value',\n                    name: {\n                        en: 'Door contact open',\n                        de: 'T\u00FCr-/Fensterkontakte',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: false,\n                    states: {\n                        en: { 0: 'Door conntact(s) open', 1: 'Door contact(s) closed' },\n                        de: { 0: 'T\u00FCr-/Fensterkontakt(e) offen', 1: 'T\u00FCr-/Fensterkontakt(e) geschlossen' },\n                    },\n                    min: 0,\n                    max: 1,\n                },\n            },\n            battery_ok: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'value',\n                    name: {\n                        en: 'Emergency power battery',\n                        de: 'Notstrombatterie',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: false,\n                    states: {\n                        en: { 0: 'Error', 1: 'Okay' },\n                        de: { 0: 'Fehler', 1: 'Okay' },\n                    },\n                    min: 0,\n                    max: 1,\n                },\n            },\n            tamper_ok: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'value',\n                    name: {\n                        en: 'Sabotage',\n                        de: 'Sabotage',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: false,\n                    states: {\n                        en: { 0: 'Error', 1: 'Okay' },\n                        de: { 0: 'Fehler', 1: 'Okay' },\n                    },\n                    min: 0,\n                    max: 1,\n                },\n            },\n            interference_ok: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'value',\n                    name: {\n                        en: 'Radio interference',\n                        de: 'Funkst\u00F6rungen',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: false,\n                    states: {\n                        en: { 0: 'Error', 1: 'Okay' },\n                        de: { 0: 'Fehler', 1: 'Okay' },\n                    },\n                    min: 0,\n                    max: 1,\n                },\n            },\n            ac_activation_ok: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'value',\n                    name: {\n                        en: 'Power supply',\n                        de: 'Netzteil',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: false,\n                    states: {\n                        en: { 0: 'Error', 1: 'Okay' },\n                        de: { 0: 'Fehler', 1: 'Okay' },\n                    },\n                    min: 0,\n                    max: 1,\n                },\n            },\n            rssi: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'value',\n                    name: {\n                        en: 'Rssi',\n                        de: 'Rssi',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: false,\n                    min: 0,\n                    max: 9,\n                },\n            },\n            reachable: {\n                type: 'state',\n                common: {\n                    type: 'boolean',\n                    role: 'value',\n                    name: {\n                        en: 'Device reachable',\n                        de: 'Ger\u00E4t erreichbar',\n                    },\n                    icon: '/icons/zentrale.png',\n                    states: {\n                        en: { false: 'no', 1: 'yes' },\n                        de: { false: 'nein', 1: 'ja' },\n                    },\n                    read: true,\n                    write: false,\n                },\n            },\n            sig_gsm_ok: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'value',\n                    name: {\n                        en: 'GSM Signal',\n                        de: 'GSM Signal',\n                    },\n                    icon: '/icons/zentrale.png',\n                    read: true,\n                    write: false,\n                    states: {\n                        en: { 0: 'Error', 1: 'Okay' },\n                        de: { 0: 'Fehler', 1: 'Okay' },\n                    },\n                    min: 0,\n                    max: 1,\n                },\n            },\n        };\n        return statusDatapoints;\n    }\n\n    private static getSmsDatapoints(): defSmsDatapoints {\n        const smsDatapoints: defSmsDatapoints = {\n            number: {\n                type: 'state',\n                common: {\n                    type: 'string',\n                    role: 'state',\n                    name: {\n                        en: 'Phone Number',\n                        de: 'Telefonnumer',\n                    },\n                    icon: '/icons/sms.png',\n                    read: true,\n                    write: true,\n                    def: '',\n                },\n            },\n            text: {\n                type: 'state',\n                common: {\n                    type: 'string',\n                    role: 'state',\n                    name: {\n                        en: 'SMS Text',\n                        de: 'SMS Text',\n                    },\n                    icon: '/icons/sms.png',\n                    read: true,\n                    write: true,\n                    def: '',\n                },\n            },\n            dial: {\n                type: 'state',\n                common: {\n                    type: 'boolean',\n                    role: 'button',\n                    name: {\n                        en: 'Send SMS',\n                        de: 'SMS senden',\n                    },\n                    icon: '/icons/sms.png',\n                    read: true,\n                    write: true,\n                    def: false,\n                },\n            },\n            result: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'value',\n                    name: {\n                        en: 'Sent Result',\n                        de: 'R\u00FCckmeldung',\n                    },\n                    states: {\n                        en: { 0: 'Error', 1: 'Okay', 2: 'Sending', 3: 'No Status' },\n                        de: { 0: 'Fehler beim senden', 1: 'erfogeich gessendet', 2: 'in Zustellung', 3: 'Kein Status' },\n                    },\n                    icon: '/icons/sms.png',\n                    read: false,\n                    write: false,\n                    def: 3,\n                },\n            },\n            provider: {\n                type: 'state',\n                common: {\n                    type: 'number',\n                    role: 'state',\n                    name: {\n                        de: 'Provider',\n                        en: 'Provider',\n                    },\n                    icon: '/icons/sms.png',\n                    read: false,\n                    write: true,\n                    states: {\n                        en: { 1: 'SMS with SIM Card', 2: 'SMS by Gateway' },\n                        de: { 1: 'SMS per SIM Card', 2: 'SMS per Gateway' },\n                    },\n                    def: 1,\n                },\n            },\n        };\n        return smsDatapoints;\n    }\n\n    private static getWebcamDatapoints(): defWebcamDatapoints {\n        const webcamDatapoints: defWebcamDatapoints = {\n            /*\n        cam9: {\n            type: 'channel',\n            common: {\n                name: '%value%'\n            }\n        },\n        'camp8.stream': {\n            type: 'state',\n            common: {\n                type: 'string',\n                role: 'text.url',\n                icon: '/icons/webcam.png',\n                name: 'Stream',\n                read: true,\n                write: false,\n                def: ''\n            }\n        },\n        'cam8.image': {\n            type: 'state',\n            common: {\n                type: 'string',\n                role: 'text.url',\n                icon: '/icons/webcam.png',\n                name: 'Image',\n                read: true,\n                write: false,\n                def: ''\n            }\n        },\n        */\n            image: {\n                type: 'state',\n                common: {\n                    type: 'string',\n                    role: 'text.url',\n                    icon: '/icons/webcam.png',\n                    name: 'Image',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n            },\n            stream: {\n                type: 'state',\n                common: {\n                    type: 'string',\n                    role: 'text.url',\n                    icon: '/icons/webcam.png',\n                    name: 'Stream',\n                    read: true,\n                    write: false,\n                    def: '',\n                },\n            },\n        };\n        return webcamDatapoints;\n    }\n\n    /**\n     * Get all information (datapoints) like name, value type, ...for a device type\n     *\n     * @param devicetype Lupusec Type like 38\n     * @param language Language like en, de, ...\n     * @returns List of state for Type\n     */\n    public static getDeviceTypeList(devicetype: number, language: string): defDeviceDatapoints | undefined {\n        const deviceTypes = Datapoints.getDeviceTypes();\n        const deviceDatapoints = Datapoints.getDeviceDatapoints();\n\n        if (devicetype === undefined) {\n            return;\n        }\n        const typename = `TYPE_${devicetype}`;\n        const icon = deviceTypes[typename]?.icon;\n        const devlist = deviceTypes[typename]?.devlist;\n        /*\n    const devicelist = tools.copyObject({\n        ...deviceDatapoints[devlist],\n        ...deviceDatapoints['type_all']\n    });\n    */\n        const devicelist = Tools.mergeObject(deviceDatapoints[devlist], deviceDatapoints.type_all);\n        // const devicelist = tools.mergeObject(tools.copyObject(deviceDatapoints[devlist]), tools.copyObject(deviceDatapoints['type_all']));\n        if (devicelist) {\n            for (const name in devicelist) {\n                if (devicelist[name].common && icon && !devicelist[name].common.icon) {\n                    devicelist[name].common.icon = icon;\n                }\n                if (\n                    devicelist[name].common &&\n                    devicelist[name].common.states &&\n                    devicelist[name].common.states[language]\n                ) {\n                    devicelist[name].common.states = devicelist[name].common.states[language];\n                    continue;\n                }\n                if (devicelist[name].common && devicelist[name].common.states && devicelist[name].common.states.en) {\n                    devicelist[name].common.states = devicelist[name].common.states.en;\n                    continue;\n                }\n            }\n        }\n        return devicelist;\n    }\n\n    /**\n     * Returns a icon for a devicetype\n     *\n     * @param devicetype : device type like 20, 30, 21\n     * @returns : icon\n     */\n    public static getDeviceIconByDeviceType(devicetype: number): string | undefined {\n        const deviceTypes = Datapoints.getDeviceTypes();\n        if (devicetype === undefined) {\n            return;\n        }\n        const typename = `TYPE_${devicetype}`;\n        const icon = deviceTypes[typename]?.icon;\n        return icon;\n    }\n\n    /**\n     *\n     * @param devicetype type of lupsec alarm system like 57\n     * @returns name of type. for example Nuki\n     */\n    public static getDeviceNameByDeviceType(devicetype: number): string | undefined {\n        const deviceTypes = Datapoints.getDeviceTypes();\n        if (devicetype === undefined) {\n            return;\n        }\n        const typename = `TYPE_${devicetype}`;\n        const name = deviceTypes[typename]?.name;\n        return name;\n    }\n\n    /**\n     *\n     * @param language language like en or de\n     * @returns status datapoints\n     */\n    public static getStatusTypeList(language: string): defStatusDatapoints {\n        const statuslist = Datapoints.getStatusDatapoints();\n        if (statuslist) {\n            for (const name in statuslist) {\n                if (\n                    statuslist[name].common &&\n                    statuslist[name].common.states &&\n                    statuslist[name].common.states[language]\n                ) {\n                    statuslist[name].common.states = statuslist[name].common.states[language];\n                    continue;\n                }\n                if (statuslist[name].common && statuslist[name].common.states && statuslist[name].common.states.en) {\n                    statuslist[name].common.states = statuslist[name].common.states.en;\n                    continue;\n                }\n                delete statuslist[name].common?.states;\n            }\n        }\n        return statuslist;\n    }\n\n    /**\n     *\n     * @param language language like en or de\n     * @returns sms datapoints\n     */\n    public static getSMSTypeList(language: string): defSmsDatapoints {\n        const smslist = Datapoints.getSmsDatapoints();\n        if (smslist) {\n            for (const name in smslist) {\n                if (smslist[name].common && smslist[name].common.states && smslist[name].common.states[language]) {\n                    smslist[name].common.states = smslist[name].common.states[language];\n                    continue;\n                }\n                if (smslist[name].common && smslist[name].common.states && smslist[name].common.states.en) {\n                    smslist[name].common.states = smslist[name].common.states.en;\n                    continue;\n                }\n                delete smslist[name].common?.states;\n            }\n        }\n        return smslist;\n    }\n\n    /**\n     *\n     * @param language language like en or de\n     * @returns webcam datapoints\n     */\n    public static getWebcamTypeList(language: string): defWebcamDatapoints {\n        const webcamlist = Datapoints.getWebcamDatapoints();\n        if (webcamlist) {\n            for (const name in webcamlist) {\n                if (\n                    webcamlist[name].common &&\n                    webcamlist[name].common.states &&\n                    webcamlist[name].common.states[language]\n                ) {\n                    webcamlist[name].common.states = webcamlist[name].common.states[language];\n                    continue;\n                }\n                if (webcamlist[name].common && webcamlist[name].common.states && webcamlist[name].common.states.en) {\n                    webcamlist[name].common.states = webcamlist[name].common.states.en;\n                    continue;\n                }\n                delete webcamlist[name].common?.states;\n            }\n        }\n        return webcamlist;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsB;AA4Cf,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA,EAIpB,OAAe,iBAAiC;AAC5C,UAAM,cAA8B;AAAA,MAChC,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,MAA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",
  "names": []
}
